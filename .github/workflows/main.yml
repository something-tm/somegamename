name: Unity CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build ${{ matrix.targetPlatform }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            targetPlatform: StandaloneLinux64
          - os: windows-2022
            targetPlatform: StandaloneWindows64
          - os: macos-latest
            targetPlatform: StandaloneOSX

    steps:
      # --- OS-specific cleanup ---
      - name: Free up disk space (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo apt-get clean
          docker system prune --all --force
          df -h

      - name: Free up disk space (Windows)
        if: runner.os == 'Windows'
        run: |
          Write-Output "Cleaning temp files..."
          Remove-Item -Recurse -Force "C:\ProgramData\chocolatey" -ErrorAction SilentlyContinue
          Remove-Item -Recurse -Force "C:\Android" -ErrorAction SilentlyContinue
          Write-Output "Disk space after cleanup:"
          Get-PSDrive

      - name: Free up disk space (macOS)
        if: runner.os == 'macOS'
        run: |
          sudo rm -rf /Applications/Xcode*.app
          sudo rm -rf /Library/Android
          df -h

      # --- Checkout code ---
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      # --- Cache ---
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ runner.os }}-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ runner.os }}-${{ matrix.targetPlatform }}-
            Library-${{ runner.os }}-
            Library-

      # --- Build step ---
      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true

      # --- Upload artifact ---
      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ matrix.os }}
          path: build

